//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace HelpList
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::HelpList.HelpList_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::HelpList.HelpList_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::HelpList.HelpList_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace HelpList.HelpList_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[43];
            _typeNameTable[0] = "HelpList.View.PivotCreateStudent";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "HelpList.View.PivotCreateTeacher";
            _typeNameTable[4] = "HelpList.View.PivotCreateClass";
            _typeNameTable[5] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[6] = "Object";
            _typeNameTable[7] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[8] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[9] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[10] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[11] = "Microsoft.Xaml.Interactivity.Trigger";
            _typeNameTable[12] = "Microsoft.Xaml.Interactivity.Behavior";
            _typeNameTable[13] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[14] = "String";
            _typeNameTable[15] = "Microsoft.Xaml.Interactions.Core.NavigateToPageAction";
            _typeNameTable[16] = "HelpList.View.CreatePageAdmin";
            _typeNameTable[17] = "HelpList.ViewModel.ProblemCollector";
            _typeNameTable[18] = "HelpList.Model.SingletonHelpList";
            _typeNameTable[19] = "HelpList.Model.Problem";
            _typeNameTable[20] = "System.DateTime";
            _typeNameTable[21] = "System.ValueType";
            _typeNameTable[22] = "FV3.Helpers.RelayCommand";
            _typeNameTable[23] = "HelpList.View.HelpListStudent";
            _typeNameTable[24] = "HelpList.View.HelpListTeacher";
            _typeNameTable[25] = "HelpList.Model.ClassCollection";
            _typeNameTable[26] = "HelpList.Model.ClassObject";
            _typeNameTable[27] = "System.Collections.ObjectModel.ObservableCollection`1<HelpList.Model.ClassObject>";
            _typeNameTable[28] = "System.Collections.ObjectModel.Collection`1<HelpList.Model.ClassObject>";
            _typeNameTable[29] = "HelpList.View.HomePageAdmin";
            _typeNameTable[30] = "HelpList.View.HomePageStudent";
            _typeNameTable[31] = "HelpList.View.HomePageTeacher";
            _typeNameTable[32] = "HelpList.MainPage";
            _typeNameTable[33] = "HelpList.Model.StudentCollection";
            _typeNameTable[34] = "HelpList.Model.Student";
            _typeNameTable[35] = "HelpList.Model.User";
            _typeNameTable[36] = "System.Collections.ObjectModel.ObservableCollection`1<HelpList.Model.Student>";
            _typeNameTable[37] = "System.Collections.ObjectModel.Collection`1<HelpList.Model.Student>";
            _typeNameTable[38] = "Int32";
            _typeNameTable[39] = "HelpList.Model.TeacherCollection";
            _typeNameTable[40] = "HelpList.Model.Teacher";
            _typeNameTable[41] = "System.Collections.ObjectModel.ObservableCollection`1<HelpList.Model.Teacher>";
            _typeNameTable[42] = "System.Collections.ObjectModel.Collection`1<HelpList.Model.Teacher>";

            _typeTable = new global::System.Type[43];
            _typeTable[0] = typeof(global::HelpList.View.PivotCreateStudent);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::HelpList.View.PivotCreateTeacher);
            _typeTable[4] = typeof(global::HelpList.View.PivotCreateClass);
            _typeTable[5] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[6] = typeof(global::System.Object);
            _typeTable[7] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[8] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[9] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[10] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[11] = typeof(global::Microsoft.Xaml.Interactivity.Trigger);
            _typeTable[12] = typeof(global::Microsoft.Xaml.Interactivity.Behavior);
            _typeTable[13] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[14] = typeof(global::System.String);
            _typeTable[15] = typeof(global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction);
            _typeTable[16] = typeof(global::HelpList.View.CreatePageAdmin);
            _typeTable[17] = typeof(global::HelpList.ViewModel.ProblemCollector);
            _typeTable[18] = typeof(global::HelpList.Model.SingletonHelpList);
            _typeTable[19] = typeof(global::HelpList.Model.Problem);
            _typeTable[20] = typeof(global::System.DateTime);
            _typeTable[21] = typeof(global::System.ValueType);
            _typeTable[22] = typeof(global::FV3.Helpers.RelayCommand);
            _typeTable[23] = typeof(global::HelpList.View.HelpListStudent);
            _typeTable[24] = typeof(global::HelpList.View.HelpListTeacher);
            _typeTable[25] = typeof(global::HelpList.Model.ClassCollection);
            _typeTable[26] = typeof(global::HelpList.Model.ClassObject);
            _typeTable[27] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::HelpList.Model.ClassObject>);
            _typeTable[28] = typeof(global::System.Collections.ObjectModel.Collection<global::HelpList.Model.ClassObject>);
            _typeTable[29] = typeof(global::HelpList.View.HomePageAdmin);
            _typeTable[30] = typeof(global::HelpList.View.HomePageStudent);
            _typeTable[31] = typeof(global::HelpList.View.HomePageTeacher);
            _typeTable[32] = typeof(global::HelpList.MainPage);
            _typeTable[33] = typeof(global::HelpList.Model.StudentCollection);
            _typeTable[34] = typeof(global::HelpList.Model.Student);
            _typeTable[35] = typeof(global::HelpList.Model.User);
            _typeTable[36] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::HelpList.Model.Student>);
            _typeTable[37] = typeof(global::System.Collections.ObjectModel.Collection<global::HelpList.Model.Student>);
            _typeTable[38] = typeof(global::System.Int32);
            _typeTable[39] = typeof(global::HelpList.Model.TeacherCollection);
            _typeTable[40] = typeof(global::HelpList.Model.Teacher);
            _typeTable[41] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::HelpList.Model.Teacher>);
            _typeTable[42] = typeof(global::System.Collections.ObjectModel.Collection<global::HelpList.Model.Teacher>);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_PivotCreateStudent() { return new global::HelpList.View.PivotCreateStudent(); }
        private object Activate_3_PivotCreateTeacher() { return new global::HelpList.View.PivotCreateTeacher(); }
        private object Activate_4_PivotCreateClass() { return new global::HelpList.View.PivotCreateClass(); }
        private object Activate_7_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_10_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_13_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_15_NavigateToPageAction() { return new global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction(); }
        private object Activate_16_CreatePageAdmin() { return new global::HelpList.View.CreatePageAdmin(); }
        private object Activate_17_ProblemCollector() { return new global::HelpList.ViewModel.ProblemCollector(); }
        private object Activate_23_HelpListStudent() { return new global::HelpList.View.HelpListStudent(); }
        private object Activate_24_HelpListTeacher() { return new global::HelpList.View.HelpListTeacher(); }
        private object Activate_25_ClassCollection() { return new global::HelpList.Model.ClassCollection(); }
        private object Activate_26_ClassObject() { return new global::HelpList.Model.ClassObject(); }
        private object Activate_27_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::HelpList.Model.ClassObject>(); }
        private object Activate_28_Collection() { return new global::System.Collections.ObjectModel.Collection<global::HelpList.Model.ClassObject>(); }
        private object Activate_29_HomePageAdmin() { return new global::HelpList.View.HomePageAdmin(); }
        private object Activate_30_HomePageStudent() { return new global::HelpList.View.HomePageStudent(); }
        private object Activate_31_HomePageTeacher() { return new global::HelpList.View.HomePageTeacher(); }
        private object Activate_32_MainPage() { return new global::HelpList.MainPage(); }
        private object Activate_33_StudentCollection() { return new global::HelpList.Model.StudentCollection(); }
        private object Activate_34_Student() { return new global::HelpList.Model.Student(); }
        private object Activate_35_User() { return new global::HelpList.Model.User(); }
        private object Activate_36_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::HelpList.Model.Student>(); }
        private object Activate_37_Collection() { return new global::System.Collections.ObjectModel.Collection<global::HelpList.Model.Student>(); }
        private object Activate_39_TeacherCollection() { return new global::HelpList.Model.TeacherCollection(); }
        private object Activate_40_Teacher() { return new global::HelpList.Model.Teacher(); }
        private object Activate_41_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::HelpList.Model.Teacher>(); }
        private object Activate_42_Collection() { return new global::System.Collections.ObjectModel.Collection<global::HelpList.Model.Teacher>(); }
        private void VectorAdd_7_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_13_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_27_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HelpList.Model.ClassObject>)instance;
            var newItem = (global::HelpList.Model.ClassObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_28_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HelpList.Model.ClassObject>)instance;
            var newItem = (global::HelpList.Model.ClassObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_36_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HelpList.Model.Student>)instance;
            var newItem = (global::HelpList.Model.Student)item;
            collection.Add(newItem);
        }
        private void VectorAdd_37_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HelpList.Model.Student>)instance;
            var newItem = (global::HelpList.Model.Student)item;
            collection.Add(newItem);
        }
        private void VectorAdd_41_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HelpList.Model.Teacher>)instance;
            var newItem = (global::HelpList.Model.Teacher)item;
            collection.Add(newItem);
        }
        private void VectorAdd_42_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HelpList.Model.Teacher>)instance;
            var newItem = (global::HelpList.Model.Teacher)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::HelpList.HelpList_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::HelpList.HelpList_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  HelpList.View.PivotCreateStudent
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_PivotCreateStudent;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::HelpList.HelpList_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::HelpList.HelpList_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  HelpList.View.PivotCreateTeacher
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_3_PivotCreateTeacher;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  HelpList.View.PivotCreateClass
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_4_PivotCreateClass;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 6:   //  Object
                xamlType = new global::HelpList.HelpList_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_7_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 8:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::HelpList.HelpList_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::HelpList.HelpList_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Trigger"));
                userType.Activator = Activate_10_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactivity.Trigger.Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                xamlType = userType;
                break;

            case 11:   //  Microsoft.Xaml.Interactivity.Trigger
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior"));
                userType.SetContentPropertyName("Microsoft.Xaml.Interactivity.Trigger.Actions");
                userType.AddMemberName("Actions");
                xamlType = userType;
                break;

            case 12:   //  Microsoft.Xaml.Interactivity.Behavior
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 13:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_13_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  String
                xamlType = new global::HelpList.HelpList_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  Microsoft.Xaml.Interactions.Core.NavigateToPageAction
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_15_NavigateToPageAction;
                userType.AddMemberName("TargetPage");
                userType.AddMemberName("Parameter");
                xamlType = userType;
                break;

            case 16:   //  HelpList.View.CreatePageAdmin
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_16_CreatePageAdmin;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  HelpList.ViewModel.ProblemCollector
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_17_ProblemCollector;
                userType.AddMemberName("MyHelpList");
                userType.AddMemberName("SelectedProblem");
                userType.AddMemberName("Date");
                userType.AddMemberName("AddCommand");
                userType.AddMemberName("RemoveCommand");
                userType.AddMemberName("RemoveAllCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  HelpList.Model.SingletonHelpList
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  HelpList.Model.Problem
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  System.DateTime
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  System.ValueType
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 22:   //  FV3.Helpers.RelayCommand
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  HelpList.View.HelpListStudent
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_23_HelpListStudent;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  HelpList.View.HelpListTeacher
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_24_HelpListTeacher;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  HelpList.Model.ClassCollection
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_25_ClassCollection;
                userType.AddMemberName("ClassName");
                userType.AddMemberName("ClassRoom");
                userType.AddMemberName("SelectedClass");
                userType.AddMemberName("NewClass");
                userType.AddMemberName("AddCommand");
                userType.AddMemberName("DeleteCommand");
                userType.AddMemberName("CC");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  HelpList.Model.ClassObject
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_26_ClassObject;
                userType.AddMemberName("ClassName");
                userType.AddMemberName("ClassRoom");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  System.Collections.ObjectModel.ObservableCollection`1<HelpList.Model.ClassObject>
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<HelpList.Model.ClassObject>"));
                userType.CollectionAdd = VectorAdd_27_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  System.Collections.ObjectModel.Collection`1<HelpList.Model.ClassObject>
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_28_Collection;
                userType.CollectionAdd = VectorAdd_28_Collection;
                xamlType = userType;
                break;

            case 29:   //  HelpList.View.HomePageAdmin
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_29_HomePageAdmin;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  HelpList.View.HomePageStudent
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_30_HomePageStudent;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  HelpList.View.HomePageTeacher
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_HomePageTeacher;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  HelpList.MainPage
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_32_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  HelpList.Model.StudentCollection
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_33_StudentCollection;
                userType.AddMemberName("FirstName");
                userType.AddMemberName("LastName");
                userType.AddMemberName("Mail");
                userType.AddMemberName("Password");
                userType.AddMemberName("SelectedStudent");
                userType.AddMemberName("NewStudent");
                userType.AddMemberName("AddCommand");
                userType.AddMemberName("DeleteCommand");
                userType.AddMemberName("SC");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  HelpList.Model.Student
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HelpList.Model.User"));
                userType.Activator = Activate_34_Student;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  HelpList.Model.User
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_35_User;
                userType.AddMemberName("FirstName");
                userType.AddMemberName("LastName");
                userType.AddMemberName("Mail");
                userType.AddMemberName("PassWord");
                userType.AddMemberName("Nr");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  System.Collections.ObjectModel.ObservableCollection`1<HelpList.Model.Student>
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<HelpList.Model.Student>"));
                userType.CollectionAdd = VectorAdd_36_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 37:   //  System.Collections.ObjectModel.Collection`1<HelpList.Model.Student>
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_37_Collection;
                userType.CollectionAdd = VectorAdd_37_Collection;
                xamlType = userType;
                break;

            case 38:   //  Int32
                xamlType = new global::HelpList.HelpList_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 39:   //  HelpList.Model.TeacherCollection
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_39_TeacherCollection;
                userType.AddMemberName("FirstName");
                userType.AddMemberName("LastName");
                userType.AddMemberName("Password");
                userType.AddMemberName("Mail");
                userType.AddMemberName("SelectedTeacher");
                userType.AddMemberName("NewTeacher");
                userType.AddMemberName("AddCommand");
                userType.AddMemberName("DeleteCommand");
                userType.AddMemberName("TC");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  HelpList.Model.Teacher
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HelpList.Model.User"));
                userType.Activator = Activate_40_Teacher;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  System.Collections.ObjectModel.ObservableCollection`1<HelpList.Model.Teacher>
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<HelpList.Model.Teacher>"));
                userType.CollectionAdd = VectorAdd_41_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  System.Collections.ObjectModel.Collection`1<HelpList.Model.Teacher>
                userType = new global::HelpList.HelpList_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_42_Collection;
                userType.CollectionAdd = VectorAdd_42_Collection;
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_0_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_1_Trigger_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Trigger)instance;
            return that.Actions;
        }
        private object get_2_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_2_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_3_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_3_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_4_Behavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Behavior)instance;
            return that.AssociatedObject;
        }
        private object get_5_NavigateToPageAction_TargetPage(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            return that.TargetPage;
        }
        private void set_5_NavigateToPageAction_TargetPage(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            that.TargetPage = (global::System.String)Value;
        }
        private object get_6_NavigateToPageAction_Parameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            return that.Parameter;
        }
        private void set_6_NavigateToPageAction_Parameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.NavigateToPageAction)instance;
            that.Parameter = (global::System.Object)Value;
        }
        private object get_7_ProblemCollector_MyHelpList(object instance)
        {
            var that = (global::HelpList.ViewModel.ProblemCollector)instance;
            return that.MyHelpList;
        }
        private void set_7_ProblemCollector_MyHelpList(object instance, object Value)
        {
            var that = (global::HelpList.ViewModel.ProblemCollector)instance;
            that.MyHelpList = (global::HelpList.Model.SingletonHelpList)Value;
        }
        private object get_8_ProblemCollector_SelectedProblem(object instance)
        {
            var that = (global::HelpList.ViewModel.ProblemCollector)instance;
            return that.SelectedProblem;
        }
        private void set_8_ProblemCollector_SelectedProblem(object instance, object Value)
        {
            var that = (global::HelpList.ViewModel.ProblemCollector)instance;
            that.SelectedProblem = (global::HelpList.Model.Problem)Value;
        }
        private object get_9_ProblemCollector_Date(object instance)
        {
            var that = (global::HelpList.ViewModel.ProblemCollector)instance;
            return that.Date;
        }
        private void set_9_ProblemCollector_Date(object instance, object Value)
        {
            var that = (global::HelpList.ViewModel.ProblemCollector)instance;
            that.Date = (global::System.DateTime)Value;
        }
        private object get_10_ProblemCollector_AddCommand(object instance)
        {
            var that = (global::HelpList.ViewModel.ProblemCollector)instance;
            return that.AddCommand;
        }
        private void set_10_ProblemCollector_AddCommand(object instance, object Value)
        {
            var that = (global::HelpList.ViewModel.ProblemCollector)instance;
            that.AddCommand = (global::FV3.Helpers.RelayCommand)Value;
        }
        private object get_11_ProblemCollector_RemoveCommand(object instance)
        {
            var that = (global::HelpList.ViewModel.ProblemCollector)instance;
            return that.RemoveCommand;
        }
        private void set_11_ProblemCollector_RemoveCommand(object instance, object Value)
        {
            var that = (global::HelpList.ViewModel.ProblemCollector)instance;
            that.RemoveCommand = (global::FV3.Helpers.RelayCommand)Value;
        }
        private object get_12_ProblemCollector_RemoveAllCommand(object instance)
        {
            var that = (global::HelpList.ViewModel.ProblemCollector)instance;
            return that.RemoveAllCommand;
        }
        private void set_12_ProblemCollector_RemoveAllCommand(object instance, object Value)
        {
            var that = (global::HelpList.ViewModel.ProblemCollector)instance;
            that.RemoveAllCommand = (global::FV3.Helpers.RelayCommand)Value;
        }
        private object get_13_ClassCollection_ClassName(object instance)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            return that.ClassName;
        }
        private void set_13_ClassCollection_ClassName(object instance, object Value)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            that.ClassName = (global::System.String)Value;
        }
        private object get_14_ClassCollection_ClassRoom(object instance)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            return that.ClassRoom;
        }
        private void set_14_ClassCollection_ClassRoom(object instance, object Value)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            that.ClassRoom = (global::System.String)Value;
        }
        private object get_15_ClassCollection_SelectedClass(object instance)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            return that.SelectedClass;
        }
        private void set_15_ClassCollection_SelectedClass(object instance, object Value)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            that.SelectedClass = (global::HelpList.Model.ClassObject)Value;
        }
        private object get_16_ClassCollection_NewClass(object instance)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            return that.NewClass;
        }
        private void set_16_ClassCollection_NewClass(object instance, object Value)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            that.NewClass = (global::HelpList.Model.ClassObject)Value;
        }
        private object get_17_ClassCollection_AddCommand(object instance)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            return that.AddCommand;
        }
        private void set_17_ClassCollection_AddCommand(object instance, object Value)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            that.AddCommand = (global::FV3.Helpers.RelayCommand)Value;
        }
        private object get_18_ClassCollection_DeleteCommand(object instance)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            return that.DeleteCommand;
        }
        private void set_18_ClassCollection_DeleteCommand(object instance, object Value)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            that.DeleteCommand = (global::FV3.Helpers.RelayCommand)Value;
        }
        private object get_19_ClassCollection_CC(object instance)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            return that.CC;
        }
        private void set_19_ClassCollection_CC(object instance, object Value)
        {
            var that = (global::HelpList.Model.ClassCollection)instance;
            that.CC = (global::System.Collections.ObjectModel.ObservableCollection<global::HelpList.Model.ClassObject>)Value;
        }
        private object get_20_ClassObject_ClassName(object instance)
        {
            var that = (global::HelpList.Model.ClassObject)instance;
            return that.ClassName;
        }
        private void set_20_ClassObject_ClassName(object instance, object Value)
        {
            var that = (global::HelpList.Model.ClassObject)instance;
            that.ClassName = (global::System.String)Value;
        }
        private object get_21_ClassObject_ClassRoom(object instance)
        {
            var that = (global::HelpList.Model.ClassObject)instance;
            return that.ClassRoom;
        }
        private void set_21_ClassObject_ClassRoom(object instance, object Value)
        {
            var that = (global::HelpList.Model.ClassObject)instance;
            that.ClassRoom = (global::System.String)Value;
        }
        private object get_22_StudentCollection_FirstName(object instance)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            return that.FirstName;
        }
        private void set_22_StudentCollection_FirstName(object instance, object Value)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            that.FirstName = (global::System.String)Value;
        }
        private object get_23_StudentCollection_LastName(object instance)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            return that.LastName;
        }
        private void set_23_StudentCollection_LastName(object instance, object Value)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            that.LastName = (global::System.String)Value;
        }
        private object get_24_StudentCollection_Mail(object instance)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            return that.Mail;
        }
        private void set_24_StudentCollection_Mail(object instance, object Value)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            that.Mail = (global::System.String)Value;
        }
        private object get_25_StudentCollection_Password(object instance)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            return that.Password;
        }
        private void set_25_StudentCollection_Password(object instance, object Value)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            that.Password = (global::System.String)Value;
        }
        private object get_26_StudentCollection_SelectedStudent(object instance)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            return that.SelectedStudent;
        }
        private void set_26_StudentCollection_SelectedStudent(object instance, object Value)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            that.SelectedStudent = (global::HelpList.Model.Student)Value;
        }
        private object get_27_StudentCollection_NewStudent(object instance)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            return that.NewStudent;
        }
        private void set_27_StudentCollection_NewStudent(object instance, object Value)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            that.NewStudent = (global::HelpList.Model.Student)Value;
        }
        private object get_28_StudentCollection_AddCommand(object instance)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            return that.AddCommand;
        }
        private void set_28_StudentCollection_AddCommand(object instance, object Value)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            that.AddCommand = (global::FV3.Helpers.RelayCommand)Value;
        }
        private object get_29_StudentCollection_DeleteCommand(object instance)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            return that.DeleteCommand;
        }
        private void set_29_StudentCollection_DeleteCommand(object instance, object Value)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            that.DeleteCommand = (global::FV3.Helpers.RelayCommand)Value;
        }
        private object get_30_StudentCollection_SC(object instance)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            return that.SC;
        }
        private void set_30_StudentCollection_SC(object instance, object Value)
        {
            var that = (global::HelpList.Model.StudentCollection)instance;
            that.SC = (global::System.Collections.ObjectModel.ObservableCollection<global::HelpList.Model.Student>)Value;
        }
        private object get_31_User_FirstName(object instance)
        {
            var that = (global::HelpList.Model.User)instance;
            return that.FirstName;
        }
        private void set_31_User_FirstName(object instance, object Value)
        {
            var that = (global::HelpList.Model.User)instance;
            that.FirstName = (global::System.String)Value;
        }
        private object get_32_User_LastName(object instance)
        {
            var that = (global::HelpList.Model.User)instance;
            return that.LastName;
        }
        private void set_32_User_LastName(object instance, object Value)
        {
            var that = (global::HelpList.Model.User)instance;
            that.LastName = (global::System.String)Value;
        }
        private object get_33_User_Mail(object instance)
        {
            var that = (global::HelpList.Model.User)instance;
            return that.Mail;
        }
        private void set_33_User_Mail(object instance, object Value)
        {
            var that = (global::HelpList.Model.User)instance;
            that.Mail = (global::System.String)Value;
        }
        private object get_34_User_PassWord(object instance)
        {
            var that = (global::HelpList.Model.User)instance;
            return that.PassWord;
        }
        private void set_34_User_PassWord(object instance, object Value)
        {
            var that = (global::HelpList.Model.User)instance;
            that.PassWord = (global::System.String)Value;
        }
        private object get_35_User_Nr(object instance)
        {
            var that = (global::HelpList.Model.User)instance;
            return that.Nr;
        }
        private void set_35_User_Nr(object instance, object Value)
        {
            var that = (global::HelpList.Model.User)instance;
            that.Nr = (global::System.Int32)Value;
        }
        private object get_36_TeacherCollection_FirstName(object instance)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            return that.FirstName;
        }
        private void set_36_TeacherCollection_FirstName(object instance, object Value)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            that.FirstName = (global::System.String)Value;
        }
        private object get_37_TeacherCollection_LastName(object instance)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            return that.LastName;
        }
        private void set_37_TeacherCollection_LastName(object instance, object Value)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            that.LastName = (global::System.String)Value;
        }
        private object get_38_TeacherCollection_Password(object instance)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            return that.Password;
        }
        private void set_38_TeacherCollection_Password(object instance, object Value)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            that.Password = (global::System.String)Value;
        }
        private object get_39_TeacherCollection_Mail(object instance)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            return that.Mail;
        }
        private void set_39_TeacherCollection_Mail(object instance, object Value)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            that.Mail = (global::System.String)Value;
        }
        private object get_40_TeacherCollection_SelectedTeacher(object instance)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            return that.SelectedTeacher;
        }
        private void set_40_TeacherCollection_SelectedTeacher(object instance, object Value)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            that.SelectedTeacher = (global::HelpList.Model.Teacher)Value;
        }
        private object get_41_TeacherCollection_NewTeacher(object instance)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            return that.NewTeacher;
        }
        private void set_41_TeacherCollection_NewTeacher(object instance, object Value)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            that.NewTeacher = (global::HelpList.Model.Teacher)Value;
        }
        private object get_42_TeacherCollection_AddCommand(object instance)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            return that.AddCommand;
        }
        private void set_42_TeacherCollection_AddCommand(object instance, object Value)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            that.AddCommand = (global::FV3.Helpers.RelayCommand)Value;
        }
        private object get_43_TeacherCollection_DeleteCommand(object instance)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            return that.DeleteCommand;
        }
        private void set_43_TeacherCollection_DeleteCommand(object instance, object Value)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            that.DeleteCommand = (global::FV3.Helpers.RelayCommand)Value;
        }
        private object get_44_TeacherCollection_TC(object instance)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            return that.TC;
        }
        private void set_44_TeacherCollection_TC(object instance, object Value)
        {
            var that = (global::HelpList.Model.TeacherCollection)instance;
            that.TC = (global::System.Collections.ObjectModel.ObservableCollection<global::HelpList.Model.Teacher>)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::HelpList.HelpList_XamlTypeInfo.XamlMember xamlMember = null;
            global::HelpList.HelpList_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_0_Interaction_Behaviors;
                xamlMember.Setter = set_0_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactivity.Trigger.Actions":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Trigger");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_Trigger_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_2_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_3_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactivity.Behavior.AssociatedObject":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_4_Behavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.NavigateToPageAction.TargetPage":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.NavigateToPageAction");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "TargetPage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_NavigateToPageAction_TargetPage;
                xamlMember.Setter = set_5_NavigateToPageAction_TargetPage;
                break;
            case "Microsoft.Xaml.Interactions.Core.NavigateToPageAction.Parameter":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.NavigateToPageAction");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "Parameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_NavigateToPageAction_Parameter;
                xamlMember.Setter = set_6_NavigateToPageAction_Parameter;
                break;
            case "HelpList.ViewModel.ProblemCollector.MyHelpList":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.ViewModel.ProblemCollector");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "MyHelpList", "HelpList.Model.SingletonHelpList");
                xamlMember.Getter = get_7_ProblemCollector_MyHelpList;
                xamlMember.Setter = set_7_ProblemCollector_MyHelpList;
                break;
            case "HelpList.ViewModel.ProblemCollector.SelectedProblem":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.ViewModel.ProblemCollector");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "SelectedProblem", "HelpList.Model.Problem");
                xamlMember.Getter = get_8_ProblemCollector_SelectedProblem;
                xamlMember.Setter = set_8_ProblemCollector_SelectedProblem;
                break;
            case "HelpList.ViewModel.ProblemCollector.Date":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.ViewModel.ProblemCollector");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "Date", "System.DateTime");
                xamlMember.Getter = get_9_ProblemCollector_Date;
                xamlMember.Setter = set_9_ProblemCollector_Date;
                break;
            case "HelpList.ViewModel.ProblemCollector.AddCommand":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.ViewModel.ProblemCollector");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "AddCommand", "FV3.Helpers.RelayCommand");
                xamlMember.Getter = get_10_ProblemCollector_AddCommand;
                xamlMember.Setter = set_10_ProblemCollector_AddCommand;
                break;
            case "HelpList.ViewModel.ProblemCollector.RemoveCommand":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.ViewModel.ProblemCollector");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "RemoveCommand", "FV3.Helpers.RelayCommand");
                xamlMember.Getter = get_11_ProblemCollector_RemoveCommand;
                xamlMember.Setter = set_11_ProblemCollector_RemoveCommand;
                break;
            case "HelpList.ViewModel.ProblemCollector.RemoveAllCommand":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.ViewModel.ProblemCollector");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "RemoveAllCommand", "FV3.Helpers.RelayCommand");
                xamlMember.Getter = get_12_ProblemCollector_RemoveAllCommand;
                xamlMember.Setter = set_12_ProblemCollector_RemoveAllCommand;
                break;
            case "HelpList.Model.ClassCollection.ClassName":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.ClassCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "ClassName", "String");
                xamlMember.Getter = get_13_ClassCollection_ClassName;
                xamlMember.Setter = set_13_ClassCollection_ClassName;
                break;
            case "HelpList.Model.ClassCollection.ClassRoom":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.ClassCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "ClassRoom", "String");
                xamlMember.Getter = get_14_ClassCollection_ClassRoom;
                xamlMember.Setter = set_14_ClassCollection_ClassRoom;
                break;
            case "HelpList.Model.ClassCollection.SelectedClass":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.ClassCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "SelectedClass", "HelpList.Model.ClassObject");
                xamlMember.Getter = get_15_ClassCollection_SelectedClass;
                xamlMember.Setter = set_15_ClassCollection_SelectedClass;
                break;
            case "HelpList.Model.ClassCollection.NewClass":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.ClassCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "NewClass", "HelpList.Model.ClassObject");
                xamlMember.Getter = get_16_ClassCollection_NewClass;
                xamlMember.Setter = set_16_ClassCollection_NewClass;
                break;
            case "HelpList.Model.ClassCollection.AddCommand":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.ClassCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "AddCommand", "FV3.Helpers.RelayCommand");
                xamlMember.Getter = get_17_ClassCollection_AddCommand;
                xamlMember.Setter = set_17_ClassCollection_AddCommand;
                break;
            case "HelpList.Model.ClassCollection.DeleteCommand":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.ClassCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "DeleteCommand", "FV3.Helpers.RelayCommand");
                xamlMember.Getter = get_18_ClassCollection_DeleteCommand;
                xamlMember.Setter = set_18_ClassCollection_DeleteCommand;
                break;
            case "HelpList.Model.ClassCollection.CC":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.ClassCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "CC", "System.Collections.ObjectModel.ObservableCollection`1<HelpList.Model.ClassObject>");
                xamlMember.Getter = get_19_ClassCollection_CC;
                xamlMember.Setter = set_19_ClassCollection_CC;
                break;
            case "HelpList.Model.ClassObject.ClassName":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.ClassObject");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "ClassName", "String");
                xamlMember.Getter = get_20_ClassObject_ClassName;
                xamlMember.Setter = set_20_ClassObject_ClassName;
                break;
            case "HelpList.Model.ClassObject.ClassRoom":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.ClassObject");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "ClassRoom", "String");
                xamlMember.Getter = get_21_ClassObject_ClassRoom;
                xamlMember.Setter = set_21_ClassObject_ClassRoom;
                break;
            case "HelpList.Model.StudentCollection.FirstName":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.StudentCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "FirstName", "String");
                xamlMember.Getter = get_22_StudentCollection_FirstName;
                xamlMember.Setter = set_22_StudentCollection_FirstName;
                break;
            case "HelpList.Model.StudentCollection.LastName":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.StudentCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "LastName", "String");
                xamlMember.Getter = get_23_StudentCollection_LastName;
                xamlMember.Setter = set_23_StudentCollection_LastName;
                break;
            case "HelpList.Model.StudentCollection.Mail":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.StudentCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "Mail", "String");
                xamlMember.Getter = get_24_StudentCollection_Mail;
                xamlMember.Setter = set_24_StudentCollection_Mail;
                break;
            case "HelpList.Model.StudentCollection.Password":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.StudentCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "Password", "String");
                xamlMember.Getter = get_25_StudentCollection_Password;
                xamlMember.Setter = set_25_StudentCollection_Password;
                break;
            case "HelpList.Model.StudentCollection.SelectedStudent":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.StudentCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "SelectedStudent", "HelpList.Model.Student");
                xamlMember.Getter = get_26_StudentCollection_SelectedStudent;
                xamlMember.Setter = set_26_StudentCollection_SelectedStudent;
                break;
            case "HelpList.Model.StudentCollection.NewStudent":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.StudentCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "NewStudent", "HelpList.Model.Student");
                xamlMember.Getter = get_27_StudentCollection_NewStudent;
                xamlMember.Setter = set_27_StudentCollection_NewStudent;
                break;
            case "HelpList.Model.StudentCollection.AddCommand":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.StudentCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "AddCommand", "FV3.Helpers.RelayCommand");
                xamlMember.Getter = get_28_StudentCollection_AddCommand;
                xamlMember.Setter = set_28_StudentCollection_AddCommand;
                break;
            case "HelpList.Model.StudentCollection.DeleteCommand":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.StudentCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "DeleteCommand", "FV3.Helpers.RelayCommand");
                xamlMember.Getter = get_29_StudentCollection_DeleteCommand;
                xamlMember.Setter = set_29_StudentCollection_DeleteCommand;
                break;
            case "HelpList.Model.StudentCollection.SC":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.StudentCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "SC", "System.Collections.ObjectModel.ObservableCollection`1<HelpList.Model.Student>");
                xamlMember.Getter = get_30_StudentCollection_SC;
                xamlMember.Setter = set_30_StudentCollection_SC;
                break;
            case "HelpList.Model.User.FirstName":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.User");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "FirstName", "String");
                xamlMember.Getter = get_31_User_FirstName;
                xamlMember.Setter = set_31_User_FirstName;
                break;
            case "HelpList.Model.User.LastName":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.User");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "LastName", "String");
                xamlMember.Getter = get_32_User_LastName;
                xamlMember.Setter = set_32_User_LastName;
                break;
            case "HelpList.Model.User.Mail":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.User");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "Mail", "String");
                xamlMember.Getter = get_33_User_Mail;
                xamlMember.Setter = set_33_User_Mail;
                break;
            case "HelpList.Model.User.PassWord":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.User");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "PassWord", "String");
                xamlMember.Getter = get_34_User_PassWord;
                xamlMember.Setter = set_34_User_PassWord;
                break;
            case "HelpList.Model.User.Nr":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.User");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "Nr", "Int32");
                xamlMember.Getter = get_35_User_Nr;
                xamlMember.Setter = set_35_User_Nr;
                break;
            case "HelpList.Model.TeacherCollection.FirstName":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.TeacherCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "FirstName", "String");
                xamlMember.Getter = get_36_TeacherCollection_FirstName;
                xamlMember.Setter = set_36_TeacherCollection_FirstName;
                break;
            case "HelpList.Model.TeacherCollection.LastName":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.TeacherCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "LastName", "String");
                xamlMember.Getter = get_37_TeacherCollection_LastName;
                xamlMember.Setter = set_37_TeacherCollection_LastName;
                break;
            case "HelpList.Model.TeacherCollection.Password":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.TeacherCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "Password", "String");
                xamlMember.Getter = get_38_TeacherCollection_Password;
                xamlMember.Setter = set_38_TeacherCollection_Password;
                break;
            case "HelpList.Model.TeacherCollection.Mail":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.TeacherCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "Mail", "String");
                xamlMember.Getter = get_39_TeacherCollection_Mail;
                xamlMember.Setter = set_39_TeacherCollection_Mail;
                break;
            case "HelpList.Model.TeacherCollection.SelectedTeacher":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.TeacherCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "SelectedTeacher", "HelpList.Model.Teacher");
                xamlMember.Getter = get_40_TeacherCollection_SelectedTeacher;
                xamlMember.Setter = set_40_TeacherCollection_SelectedTeacher;
                break;
            case "HelpList.Model.TeacherCollection.NewTeacher":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.TeacherCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "NewTeacher", "HelpList.Model.Teacher");
                xamlMember.Getter = get_41_TeacherCollection_NewTeacher;
                xamlMember.Setter = set_41_TeacherCollection_NewTeacher;
                break;
            case "HelpList.Model.TeacherCollection.AddCommand":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.TeacherCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "AddCommand", "FV3.Helpers.RelayCommand");
                xamlMember.Getter = get_42_TeacherCollection_AddCommand;
                xamlMember.Setter = set_42_TeacherCollection_AddCommand;
                break;
            case "HelpList.Model.TeacherCollection.DeleteCommand":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.TeacherCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "DeleteCommand", "FV3.Helpers.RelayCommand");
                xamlMember.Getter = get_43_TeacherCollection_DeleteCommand;
                xamlMember.Setter = set_43_TeacherCollection_DeleteCommand;
                break;
            case "HelpList.Model.TeacherCollection.TC":
                userType = (global::HelpList.HelpList_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HelpList.Model.TeacherCollection");
                xamlMember = new global::HelpList.HelpList_XamlTypeInfo.XamlMember(this, "TC", "System.Collections.ObjectModel.ObservableCollection`1<HelpList.Model.Teacher>");
                xamlMember.Getter = get_44_TeacherCollection_TC;
                xamlMember.Setter = set_44_TeacherCollection_TC;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::HelpList.HelpList_XamlTypeInfo.XamlSystemBaseType
    {
        global::HelpList.HelpList_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::HelpList.HelpList_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::HelpList.HelpList_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::HelpList.HelpList_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

